# API Deployment (Internal only)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: hello-api
          image: ghcr.io/frbarbre/k8s-learning/k8s-learning/hello-world/api:main
          ports:
            - containerPort: 8000
          env:
            - name: PORT
              value: "8000"
---
# API Service (ClusterIP - Internal only)
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP # Internal only
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: hello
          image: ghcr.io/frbarbre/k8s-learning/k8s-learning/hello-world/app:main
          ports:
            - containerPort: 3000
          env:
            - name: MESSAGE
              value: "Hello from Kubernetes with my local image!"
            - name: NEXT_PUBLIC_MESSAGE
              value: "Hello from Kubernetes Client with my local image!"
            - name: API_URL
              value: "http://api-service:8000" # ‚Üê Now uses service name
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: fba@vertica.dk
    privateKeySecretRef:
      name: letsencrypt-staging-key
    solvers:
      - http01:
          ingress:
            class: traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - hosts:
        - k3s.frederikbarbre.dk
      secretName: frontend-tls
  rules:
    - host: k3s.frederikbarbre.dk
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
