# API Deployment (Internal only)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: hello-api
          image: my-hello-api:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          env:
            - name: PORT
              value: "8000"
---
# API Service (ClusterIP - Internal only)
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP # Internal only
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: hello
          image: my-hello-app:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          env:
            - name: MESSAGE
              value: "Hello from Kubernetes with my local image!"
            - name: NEXT_PUBLIC_MESSAGE
              value: "Hello from Kubernetes Client with my local image!"
            - name: API_URL
              value: "http://api-service:8000" # ‚Üê Now uses service name
---
# Frontend Service (LoadBalancer - Externally accessible)
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 3000
  type: LoadBalancer
